name: DocFX – Generate API YAML & TOC

on:
  push:
    branches: [ main ]
    paths:
      - 'MagFlowApp/**/*.cs'
      - 'MagFlowApp/**/*.csproj'
      - 'MagFlowApp/*.sln'
      - 'MagFlowApp/docfx/**'
      - '.github/workflows/docfx-generate-api.yml'
  workflow_dispatch:

permissions:
  contents: write    # potrzebne do commit/push
  actions: read

jobs:
  generate-api:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (full history for commits)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET (10 preview + 8)
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            10.0.x
            8.0.x
          dotnet-quality: preview

      - name: Install DocFX
        run: dotnet tool update -g docfx

      - name: Add .NET tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Locate docfx.json
        id: locate
        run: |
          set -e
          FILE=$(find . -type f -name docfx.json | head -n 1)
          if [ -z "$FILE" ]; then
            echo "❌ docfx.json not found"; exit 1
          fi
          DIR=$(dirname "$FILE")
          echo "DOCFX_CONFIG=$FILE" >> $GITHUB_ENV
          echo "DOCFX_DIR=$DIR" >> $GITHUB_ENV
          echo "Config: $FILE"
          ls -la "$DIR"

      - name: Generate metadata (api/*.yml)
        run: docfx metadata "$DOCFX_CONFIG"

      - name: Generate hierarchical API TOC (api/toc.yml)
        run: |
          node -e "
          const fs=require('fs'), path=require('path');
          const apiDir = path.join(process.env.DOCFX_DIR,'api');
          if (!fs.existsSync(apiDir)) { console.log('No api/ dir – skipping'); process.exit(0); }
          const files = fs.readdirSync(apiDir).filter(f => f.endsWith('.yml') && f!=='toc.yml');
          const nsItems=[];
          for (const f of files) {
            const t=fs.readFileSync(path.join(apiDir,f),'utf8');
            const uid=(t.match(/^uid:\s*(.+)$/m)||t.match(/\n- uid:\s*(.+)$/m))?.[1]?.trim();
            const asm=(t.match(/^\s*assemblies:\s*\n\s*-\s*([A-Za-z0-9_.-]+)/m)||[])[1]?.trim();
            const typ=(t.match(/^\s*type:\s*([A-Za-z]+)/m)||[])[1];
            if (!uid || (typ && typ!=='Namespace')) continue;   // tylko namespace’y
            nsItems.push({ uid, asm: asm||'(Unknown)' });
          }
          const byAsm={}; for (const it of nsItems) (byAsm[it.asm]??=[]).push(it.uid);
          function nest(names){
            const root={};
            for(const n of names.sort()){
              const parts=n.split('.'); let node=root; let acc='';
              for(const p of parts){ acc=acc?acc+'.'+p:p; node.children??={}; node.children[acc]??={uid:acc,children:{}}; node=node.children[acc]; }
            }
            function toItems(node){
              if(!node.children) return [];
              return Object.values(node.children).sort((a,b)=>a.uid.localeCompare(b.uid))
                .map(e=>({name:e.uid.split('.').pop(),uid:e.uid,items:toItems(e)}))
                .map(e=>{ if(!e.items.length) delete e.items; return e; });
            }
            return toItems(root);
          }
          const toc=Object.keys(byAsm).sort().map(asm=>({name:asm,items:nest(byAsm[asm])}));
          const yaml=(items,ind='')=>items.map(it=>{
            let s=`${ind}- name: ${it.name}\n`; if(it.uid) s+=`${ind}  uid: ${it.uid}\n`;
            if(it.items?.length) s+=`${ind}  items:\n`+yaml(it.items,ind+'    '); return s;
          }).join('');
          fs.writeFileSync(path.join(apiDir,'toc.yml'), yaml(toc));
          console.log('✅ api/toc.yml generated');
          "

      - name: Commit & push api changes
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add "${DOCFX_DIR}/api"
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "docs(api): regenerate API YAML & TOC [skip ci]"
            git push
          fi
